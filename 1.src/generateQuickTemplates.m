function generateQuickTemplates()
% generateQuickTemplates - ‡∏™‡∏£‡πâ‡∏≤‡∏á OCR templates ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î 55 ‡∏ï‡∏±‡∏ß
%
% ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
%   ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û template ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
%   - Numbers: 0-9 (10 templates)
%   - Thai chars: ‡∏Å-‡∏Æ (44 templates)
%   - Special: - (1 template)
%
% ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏•‡∏∞‡∏ï‡∏¥‡∏ô (A-Z) ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ó‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ
%
% Output: Binary images (42x24 pixels) ‡πÉ‡∏ô 3.templates/
%   3.templates/numbers/
%   3.templates/thai_chars/
%   3.templates/special/
%
% ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Template:
%   - ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£: ‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß (255)
%   - ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á: ‡∏™‡∏µ‡∏î‡∏≥ (0)
%   - ‡∏Ç‡∏ô‡∏≤‡∏î: 42 (‡∏™‡∏π‡∏á) x 24 (‡∏Å‡∏ß‡πâ‡∏≤‡∏á) pixels
%
% ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:
%   cd('LPR-2568/1.src')
%   generateQuickTemplates()
%
% ‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô: ‡∏Ç‡∏à‡∏£‡∏¢‡∏∏‡∏ó‡∏ò ‡∏ï‡πâ‡∏ô‡∏†‡∏π‡∏ö‡∏≤‡∏•
% ‡∏ß‡∏¥‡∏ä‡∏≤: EN2143201 - Digital Image Processing
% ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: 30 ‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô 2568

fprintf('\n');
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
fprintf('  TASK 2.2: ‡∏™‡∏£‡πâ‡∏≤‡∏á OCR Templates\n');
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n');

%% ‡πÇ‡∏´‡∏•‡∏î character mappings
fprintf('üìÇ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£...\n');

if ~exist('../4.utils/char_mapping.mat', 'file')
    error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå mapping! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô createMappingFiles() ‡∏Å‡πà‡∏≠‡∏ô');
end

load('../4.utils/char_mapping.mat', 'mapping');
fprintf('   ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß: 4.utils/char_mapping.mat\n');
fprintf('   ‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á: %d\n\n', mapping.total);

%% ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
config.template_height = 42;
config.template_width = 24;
config.font_thai = 'Angsana New';
config.font_number = 'Arial Black';
config.font_size_default = 32;
config.padding = 3;

fprintf('‚öôÔ∏è  ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Template:\n');
fprintf('   ‚Ä¢ ‡∏Ç‡∏ô‡∏≤‡∏î: %dx%d pixels\n', config.template_height, config.template_width);
fprintf('   ‚Ä¢ ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢: %s\n', config.font_thai);
fprintf('   ‚Ä¢ ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç: %s\n', config.font_number);
fprintf('   ‚Ä¢ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå: %d pt\n', config.font_size_default);
fprintf('   ‚Ä¢ Padding: %d pixels\n\n', config.padding);

%% ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
fprintf('üìÅ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå templates...\n');

folders = {'../3.templates/numbers', '../3.templates/thai_chars', ...
           '../3.templates/special'};

for i = 1:length(folders)
    if ~exist(folders{i}, 'dir')
        mkdir(folders{i});
    end
end

fprintf('   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß: 3.templates/numbers/\n');
fprintf('   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß: 3.templates/thai_chars/\n');
fprintf('   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß: 3.templates/special/\n\n');

%% 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (0-9)
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
fprintf('üìä ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (0-9)...\n');
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

for i = 1:length(mapping.number_chars)
    char_val = mapping.number_chars(i);
    filename = sprintf('../3.templates/numbers/%s.png', char_val);
    
    createCharacterImage(char_val, config.font_number, ...
                        config.font_size_default, filename, config);
    
    fprintf('  [%2d/10] ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß: %s\n', i, filename);
end

fprintf('‚úÖ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à: 10/10\n\n');

%% 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÑ‡∏ó‡∏¢ (‡∏Å-‡∏Æ)
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
fprintf('üáπüá≠ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÑ‡∏ó‡∏¢ (‡∏Å-‡∏Æ)...\n');
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

for i = 1:length(mapping.thai_chars)
    char_val = mapping.thai_chars(i);
    char_name = mapping.thai_names{i};
    filename = sprintf('../3.templates/thai_chars/%s.png', char_name);
    
    createCharacterImage(char_val, config.font_thai, ...
                        config.font_size_default, filename, config);
    
    if mod(i, 10) == 0 || i == length(mapping.thai_chars)
        fprintf('  [%2d/44] ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß: %s (%s)\n', i, char_name, char_val);
    end
end

fprintf('‚úÖ ‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÑ‡∏ó‡∏¢‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à: 44/44\n\n');

%% 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏© (-)
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
fprintf('‚ûñ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏© (-)...\n');
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

filename = '../3.templates/special/dash.png';
createCharacterImage('-', config.font_number, ...
                    config.font_size_default, filename, config);

fprintf('  [1/1] ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß: %s\n', filename);
fprintf('‚úÖ ‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à: 1/1\n\n');

%% ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
fprintf('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á TEMPLATES ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n');
fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n');

fprintf('üìä ‡∏™‡∏£‡∏∏‡∏õ:\n');
fprintf('   ‚Ä¢ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç:        10 templates ‚úÖ\n');
fprintf('   ‚Ä¢ ‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÑ‡∏ó‡∏¢:      44 templates ‚úÖ\n');
fprintf('   ‚Ä¢ ‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©:    1 template  ‚úÖ\n');
fprintf('   ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n');
fprintf('   ‚Ä¢ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:    55 templates ‚úÖ\n\n');

fprintf('üìÅ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå: 3.templates/\n');
fprintf('   ‚îú‚îÄ‚îÄ numbers/      (10 files)\n');
fprintf('   ‚îú‚îÄ‚îÄ thai_chars/   (44 files)\n');
fprintf('   ‚îî‚îÄ‚îÄ special/      (1 file)\n\n');

fprintf('‚è≠Ô∏è  ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:\n');
fprintf('   ‡∏£‡∏±‡∏ô: testTemplates()\n');
fprintf('   ‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö templates ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô\n\n');

fprintf('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n');

end


%% ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
function createCharacterImage(char_val, font_name, font_size, output_path, config)
% createCharacterImage - ‡∏™‡∏£‡πâ‡∏≤‡∏á binary image ‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
%
% Inputs:
%   char_val: ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á
%   font_name: ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏≠‡∏ô‡∏ï‡πå
%   font_size: ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå (pt)
%   output_path: path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
%   config: configuration struct

% ‡∏™‡∏£‡πâ‡∏≤‡∏á figure ‡πÅ‡∏ö‡∏ö‡∏ã‡πà‡∏≠‡∏ô
fig = figure('Visible', 'off', 'Color', 'white', 'Position', [0, 0, 200, 200]);
ax = axes('Parent', fig, 'Position', [0, 0, 1, 1]);
axis(ax, 'off');

% ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
text(ax, 0.5, 0.5, char_val, ...
     'FontName', font_name, ...
     'FontSize', font_size, ...
     'FontWeight', 'bold', ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment', 'middle', ...
     'Color', 'black');

% Capture ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏û
frame = getframe(fig);
img = frame.cdata;

% ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô grayscale
img_gray = rgb2gray(img);

% Binarize (threshold)
threshold = graythresh(img_gray);
img_bw = ~imbinarize(img_gray, threshold);  % Invert: ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß

% Crop ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
[rows, cols] = find(img_bw);

if ~isempty(rows)
    row_min = max(1, min(rows) - config.padding);
    row_max = min(size(img_bw, 1), max(rows) + config.padding);
    col_min = max(1, min(cols) - config.padding);
    col_max = min(size(img_bw, 2), max(cols) + config.padding);
    
    img_cropped = img_bw(row_min:row_max, col_min:col_max);
else
    % ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏¥‡∏°
    img_cropped = img_bw;
end

% Resize ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
img_resized = imresize(img_cropped, [config.template_height, config.template_width]);

% ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô binary ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡πÄ‡∏ú‡∏∑‡πà‡∏≠ resize ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î gray values)
img_final = img_resized > 0.5;

% ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
imwrite(img_final, output_path);

% ‡∏õ‡∏¥‡∏î figure
close(fig);

end